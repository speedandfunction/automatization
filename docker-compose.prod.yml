services:
  n8n:
    depends_on: 
      postgresql: !reset null
    environment:
      - WEBHOOK_URL=${N8N_WEBHOOK_URL:?N8N_WEBHOOK_URL is required}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:?N8N_ENCRYPTION_KEY is required}
      - N8N_HOST=${N8N_HOST:?N8N_HOST is required}
      - DB_POSTGRESDB_HOST=${POSTGRES_HOST:?POSTGRES_HOST is required}
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB_N8N:?POSTGRES_DB_N8N is required}
      - DB_POSTGRESDB_USER=${POSTGRES_USER_N8N:?POSTGRES_USER_N8N is required}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD_N8N:?POSTGRES_PASSWORD_N8N is required}

  postgresql: !reset null

  temporal:
    depends_on:
      postgresql: !reset null
    environment:
      - TEMPORAL_PORT=${TEMPORAL_PORT:?TEMPORAL_PORT is required}
      - POSTGRES_SEEDS=${POSTGRES_HOST:?POSTGRES_HOST is required}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DBNAME=${POSTGRES_DB_TEMPORAL:?POSTGRES_DB_TEMPORAL is required}
      - POSTGRES_USER=${POSTGRES_USER_TEMPORAL:?POSTGRES_USER_TEMPORAL is required}
      - POSTGRES_PWD=${POSTGRES_PASSWORD_TEMPORAL:?POSTGRES_PASSWORD_TEMPORAL is required}

  temporal-ui:
    environment:
      - TEMPORAL_UI_PORT=${TEMPORAL_UI_PORT:?TEMPORAL_UI_PORT is required}
      - POSTGRES_SEEDS=${POSTGRES_HOST:?POSTGRES_HOST is required}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DBNAME=${POSTGRES_DB_TEMPORAL:?POSTGRES_DB_TEMPORAL is required}
      - POSTGRES_USER=${POSTGRES_USER_TEMPORAL:?POSTGRES_USER_TEMPORAL is required}
      - POSTGRES_PWD=${POSTGRES_PASSWORD_TEMPORAL:?POSTGRES_PASSWORD_TEMPORAL is required}
    ports: !reset []

  redis:
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:?REDIS_PASSWORD is required}

  oauth2-proxy:
    container_name: temporal-oauth-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.8.0
    restart: unless-stopped
    depends_on:
      - temporal-ui
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      # Google provider settings
      - OAUTH2_PROXY_PROVIDER=google
      - OAUTH2_PROXY_CLIENT_ID=${GOOGLE_CLIENT_ID:?GOOGLE_CLIENT_ID is required}
      - OAUTH2_PROXY_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:?GOOGLE_CLIENT_SECRET is required}
      
      # Email validation settings
      - OAUTH2_PROXY_EMAIL_DOMAINS=speedandfunction.com
      
      # Required settings
      - OAUTH2_PROXY_COOKIE_DOMAINS=.temporal.speedandfunction.com
      - OAUTH2_PROXY_WHITELIST_DOMAINS=.temporal.speedandfunction.com
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:8080
      - OAUTH2_PROXY_UPSTREAMS=http://temporal-ui:8080
      - OAUTH2_PROXY_REDIRECT_URL=${OAUTH2_PROXY_REDIRECT_URL:-https://temporal.speedandfunction.com/oauth2/callback}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET:?OAUTH2_PROXY_COOKIE_SECRET is required}
      
      # Cookie settings
      - OAUTH2_PROXY_COOKIE_NAME=_oauth2_proxy
      - OAUTH2_PROXY_COOKIE_SECURE=true
      - OAUTH2_PROXY_COOKIE_HTTPONLY=true
      - OAUTH2_PROXY_COOKIE_SAMESITE=lax
      - OAUTH2_PROXY_COOKIE_REFRESH=1h
      - OAUTH2_PROXY_COOKIE_EXPIRE=168h
      
      # CSRF protection settings
      - OAUTH2_PROXY_CSRF_COOKIE_NAME=_oauth2_proxy_csrf
      - OAUTH2_PROXY_CSRF_COOKIE_SECURE=true
      - OAUTH2_PROXY_CSRF_COOKIE_DOMAIN=.temporal.speedandfunction.com
      - OAUTH2_PROXY_CSRF_COOKIE_HTTPONLY=true
      - OAUTH2_PROXY_CSRF_COOKIE_SAMESITE=lax
      
      # Debug settings
      - OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR=true
      
      # Logout settings
      - OAUTH2_PROXY_SIGN_OUT_URL=https://temporal.speedandfunction.com/oauth2/sign_out
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:8080/oauth2/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  n8n_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /data/n8n
