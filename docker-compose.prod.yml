x-environment:
  &db-env
    POSTGRES_DB_TEMPORAL: ${POSTGRES_DB_TEMPORAL:?POSTGRES_DB_TEMPORAL is required}
    POSTGRES_USER_TEMPORAL: ${POSTGRES_USER_TEMPORAL:?POSTGRES_USER_TEMPORAL is required}
    POSTGRES_PASSWORD_TEMPORAL: ${POSTGRES_PASSWORD_TEMPORAL:?POSTGRES_PASSWORD_TEMPORAL is required}
    POSTGRES_DB_N8N: ${POSTGRES_DB_N8N:?POSTGRES_DB_N8N is required}
    POSTGRES_USER_N8N: ${POSTGRES_USER_N8N:?POSTGRES_USER_N8N is required}
    POSTGRES_PASSWORD_N8N: ${POSTGRES_PASSWORD_N8N:?POSTGRES_PASSWORD_N8N is required}
    POSTGRES_PORT: ${POSTGRES_PORT:?POSTGRES_PORT is required}

services:
  n8n:
    environment:
      - WEBHOOK_URL=${N8N_WEBHOOK_URL:?N8N_WEBHOOK_URL is required}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:?N8N_ENCRYPTION_KEY is required}
      - N8N_HOST=n8n.speedandfunction.com
  opensearch:
    environment:
      - OPENSEARCH_PORT=${OPENSEARCH_PORT:?OPENSEARCH_PORT is required}

  postgresql:
    environment:
      <<: *db-env
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d

  temporal:
    environment:
      - TEMPORAL_PORT=${TEMPORAL_PORT:?TEMPORAL_PORT is required}

  temporal-ui:
    environment:
      - TEMPORAL_UI_PORT=${TEMPORAL_UI_PORT:?TEMPORAL_UI_PORT is required}

volumes:
  n8n_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /data/n8n
  opensearch-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /data/opensearch
  postgresql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /data/postgresql
